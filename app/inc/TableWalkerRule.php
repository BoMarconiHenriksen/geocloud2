<?php
/**
 * @author     Martin HÃ¸gh <mh@mapcentia.com>
 * @copyright  2013-2022 MapCentia ApS
 * @license    http://www.gnu.org/licenses/#AGPL  GNU AFFERO GENERAL PUBLIC LICENSE 3
 *
 */

namespace app\inc;

use app\models\Geofence;
use sad_spirit\pg_builder\Delete;
use sad_spirit\pg_builder\Insert;
use sad_spirit\pg_builder\Select;
use sad_spirit\pg_builder\Update;
use sad_spirit\pg_builder\BlankWalker;


class TableWalkerRule extends BlankWalker
{
    private $rules;

    public function walkSelectStatement(Select $statement)
    {
        foreach ($statement->from->getIterator() as $from) {
            $relation = !empty($from->name->schema->value) ? $from->name->schema->value . "." . $from->name->relation->value :  $from->name->relation->value;
            $userFilter = new UserFilter("silke", "*", "*", "*", "*", $relation);
            $geofence = new Geofence($userFilter);
            $response = $geofence->authorize($this->rules);
            if (!empty($response["filters"]["read"])) $statement->where->and($response["filters"]["read"]);
        }
        parent::walkSelectStatement($statement);
    }

    public function walkUpdateStatement(Update $statement)
    {
        //print_r($statement->relation->relation->relation->value);
        $statement->where->and("userid='UPDATE'");
        parent::walkUpdateStatement($statement);
    }

    public function walkDeleteStatement(Delete $statement): void
    {
        foreach ($statement->using->getIterator() as $using) {
            //$using->name->relation->value
            $statement->where->and("userid='USING'");
        }
        $statement->where->and("userid='DELETE'");
        parent::walkDeleteStatement($statement);
    }

    public function walkInsertStatement(Insert $statement)
    {
        //print_r($statement->relation->relation->relation->value);
        if (!empty($statement->onConflict)) $statement->onConflict->where->and("userid='INSERT'");
        parent::walkInsertStatement($statement); // TODO: Change the autogenerated stub
    }

    public function setRules(array $rules): void
    {
        $this->rules = $rules;
    }
}
