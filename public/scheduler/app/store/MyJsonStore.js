/*
 * File: app/store/MyJsonStore.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.MyJsonStore', {
    extend: 'Ext.data.Store',

    requires: [
        'MyApp.model.MyModel'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: true,
            autoSync: true,
            model: 'MyApp.model.MyModel',
            storeId: 'MyJsonStore',
            proxy: {
                type: 'rest',
                api: {
                    create: '/controllers/job',
                    update: '/controllers/job',
                    destroy: '/controllers/job'
                },
                url: '/controllers/job',
                reader: {
                    type: 'json',
                    root: 'data'
                },
                listeners: {
                    exception: {
                        fn: me.onRestException,
                        scope: me
                    }
                }
            },
            listeners: {
                load: {
                    fn: me.onJsonstoreLoad,
                    scope: me
                },
                write: {
                    fn: me.onJsonstoreWrite,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onRestException: function(proxy, response, operation, eOpts) {
        alert(Ext.decode(response.responseText).message);
        this.load();
    },

    onJsonstoreLoad: function(store, records, successful, eOpts) {

    },

    onJsonstoreWrite: function(store, operation, eOpts) {
        this.load();
    }

});